# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

types:
  # Discriminated union
  Shape:
    discriminant: type
    union:
      triangle: Triangle
      square: Square
      circle: Circle

  Triangle:
    properties:
      a: double
      b: double
      c: double

  Square:
    properties:
      length: double

  Circle:
    properties:
      radius: double

  # Undiscriminated union
  DocumentPath:
    discriminated: false
    union:
      - string
      - list<string>
      - integer

  # Object with literal property
  Address:
    properties:
      line1: string
      line2: optional<string>
      city: string
      state: string
      zip: string
      # For this type, we want a `Country` enum nested in the `Address` object
      country: literal<"USA">

  # Literal type alias
  GreenColor: literal<"green">

  # Alias type that resolves to a literal
  EmeraldColor: GreenColor

  # An object including a nested literal enum with the same name as a schema type (Country)
  Account:
    properties:
      address_type: literal<"country"> # This will result in a nested `Country` enum
      name: string
      is_open: boolean
      country: Country

  Country:
    properties:
      name: string
      code: string

  # A boolean literal type alias
  IsOpen: literal<true>

  # An object with a boolean literal property
  Project:
    properties:
      is_open: literal<false>
      name: string
